"use strict";(self.webpackChunkessential_dev_utils=self.webpackChunkessential_dev_utils||[]).push([[920],{1882:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>o,contentTitle:()=>a,default:()=>d,frontMatter:()=>r,metadata:()=>l,toc:()=>c});var i=t(4848),s=t(8453);const r={sidebar_position:1,title:"Git Utils",sidebar_label:"Git Utils"},a="Git Utils",l={id:"git-github/git",title:"Git Utils",description:"This document contains useful Git commands that streamline your workflow and help you manage your repositories effectively.",source:"@site/docs/git-github/git.md",sourceDirName:"git-github",slug:"/git-github/git",permalink:"/essential-dev-utils/docs/git-github/git",draft:!1,unlisted:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/git-github/git.md",tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1,title:"Git Utils",sidebar_label:"Git Utils"},sidebar:"tutorialSidebar",previous:{title:"Git/Github",permalink:"/essential-dev-utils/docs/category/gitgithub"}},o={},c=[{value:"Count Lines of Code Excluding Certain File Types",id:"count-lines-of-code-excluding-certain-file-types",level:2},{value:"Explanation",id:"explanation",level:3},{value:"Usage",id:"usage",level:3},{value:"Remove Branches That Have Already Been Pushed",id:"remove-branches-that-have-already-been-pushed",level:2},{value:"Explanation",id:"explanation-1",level:3},{value:"Usage",id:"usage-1",level:3}];function h(e){const n={code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",hr:"hr",li:"li",p:"p",pre:"pre",ul:"ul",...(0,s.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.header,{children:(0,i.jsx)(n.h1,{id:"git-utils",children:"Git Utils"})}),"\n",(0,i.jsx)(n.p,{children:"This document contains useful Git commands that streamline your workflow and help you manage your repositories effectively."}),"\n",(0,i.jsx)(n.h2,{id:"count-lines-of-code-excluding-certain-file-types",children:"Count Lines of Code Excluding Certain File Types"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"git ls-files | grep -v 'lock' | grep -v 'svg' | xargs wc -l\n"})}),"\n",(0,i.jsx)(n.h3,{id:"explanation",children:"Explanation"}),"\n",(0,i.jsxs)(n.p,{children:["This command counts the number of lines of code in your Git repository, excluding files with the extensions ",(0,i.jsx)(n.code,{children:".lock"})," and ",(0,i.jsx)(n.code,{children:".svg"}),". Here\u2019s a breakdown of the command:"]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"git ls-files"}),": Lists all tracked files in the repository."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"grep -v 'lock'"}),': Filters out any files that contain the string "lock".']}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"grep -v 'svg'"}),': Further filters out any files that contain the string "svg".']}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"xargs wc -l"}),": Passes the remaining files to the ",(0,i.jsx)(n.code,{children:"wc"})," command, which counts the number of lines in each file."]}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"usage",children:"Usage"}),"\n",(0,i.jsx)(n.p,{children:"Run this command in your terminal to quickly assess the number of lines of code in your repository while ignoring certain file types that may not be relevant."}),"\n",(0,i.jsx)(n.h2,{id:"remove-branches-that-have-already-been-pushed",children:"Remove Branches That Have Already Been Pushed"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:'git fetch -p && for branch in $(git for-each-ref --format \'%(refname) %(upstream:track)\' refs/heads | awk \'$2 == "[gone]" {sub("refs/heads/", "", $1); print $1}\'); do git branch -D $branch; done\n'})}),"\n",(0,i.jsx)(n.h3,{id:"explanation-1",children:"Explanation"}),"\n",(0,i.jsx)(n.p,{children:"This command removes local branches that have already been deleted from the remote repository. Here\u2019s how it works:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"git fetch -p"}),": Fetches the latest changes from the remote repository and prunes (deletes) any remote-tracking branches that no longer exist."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"git for-each-ref --format '%(refname) %(upstream:track)' refs/heads"}),": Lists all local branches along with their upstream tracking information."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:'awk \'$2 == "[gone]"'}),": Filters for branches whose upstream branches are gone (deleted)."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:'sub("refs/heads/", "", $1)'}),": Removes the ",(0,i.jsx)(n.code,{children:"refs/heads/"})," prefix from the branch names."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"git branch -D $branch"}),": Deletes the local branch."]}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"usage-1",children:"Usage"}),"\n",(0,i.jsx)(n.p,{children:"Use this command to keep your local repository clean by removing branches that are no longer relevant, ensuring that your branch list is up to date with the remote repository."}),"\n",(0,i.jsx)(n.hr,{})]})}function d(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(h,{...e})}):h(e)}},8453:(e,n,t)=>{t.d(n,{R:()=>a,x:()=>l});var i=t(6540);const s={},r=i.createContext(s);function a(e){const n=i.useContext(r);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:a(e.components),i.createElement(r.Provider,{value:n},e.children)}}}]);